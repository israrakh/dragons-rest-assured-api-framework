<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-30T21:41:01 EDT" name="Regression test Suite" finished-at="2023-05-30T21:41:18 EDT" duration-ms="17616">
    <groups>
    </groups>
    <test started-at="2023-05-30T21:41:01 EDT" name="Tek Insurance API Tests" finished-at="2023-05-30T21:41:18 EDT" duration-ms="17616">
      <class name="tek.api.sqa.tests.CreateAccountTest">
        <test-method signature="createAccountValidTest()[pri:0, instance:tek.api.sqa.tests.CreateAccountTest@4e31276e]" started-at="2023-05-30T21:41:04 EDT" name="createAccountValidTest" finished-at="2023-05-30T21:41:06 EDT" duration-ms="1367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountValidTest -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.CreateAccountTest@4e31276e]" started-at="2023-05-30T21:41:04 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:04 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
      </class> <!-- tek.api.sqa.tests.CreateAccountTest -->
      <class name="tek.api.sqa.tests.UserProfileTest">
        <test-method signature="userProfileTest()[pri:0, instance:tek.api.sqa.tests.UserProfileTest@6c0d7c83]" started-at="2023-05-30T21:41:17 EDT" name="userProfileTest" finished-at="2023-05-30T21:41:18 EDT" duration-ms="1015" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [403]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [403]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at tek.api.sqa.tests.UserProfileTest.userProfileTest(UserProfileTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userProfileTest -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.UserProfileTest@6c0d7c83]" started-at="2023-05-30T21:41:17 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:17 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
      </class> <!-- tek.api.sqa.tests.UserProfileTest -->
      <class name="tek.api.sqa.tests.TokenVerifyTest">
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.TokenVerifyTest@6057aebb]" started-at="2023-05-30T21:41:16 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:16 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="tokenVerifyTest()[pri:0, instance:tek.api.sqa.tests.TokenVerifyTest@6057aebb]" started-at="2023-05-30T21:41:16 EDT" name="tokenVerifyTest" finished-at="2023-05-30T21:41:17 EDT" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenVerifyTest -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.TokenVerifyTest@6057aebb]" started-at="2023-05-30T21:41:17 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:17 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="verifyTestWithInvalidToken()[pri:0, instance:tek.api.sqa.tests.TokenVerifyTest@6057aebb]" started-at="2023-05-30T21:41:17 EDT" name="verifyTestWithInvalidToken" finished-at="2023-05-30T21:41:17 EDT" duration-ms="434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestWithInvalidToken -->
      </class> <!-- tek.api.sqa.tests.TokenVerifyTest -->
      <class name="tek.api.sqa.tests.SecurityTest">
        <test-method signature="testGeneratedTokenWithInvalidUsername()[pri:0, instance:tek.api.sqa.tests.SecurityTest@1fb19a0]" started-at="2023-05-30T21:41:15 EDT" name="testGeneratedTokenWithInvalidUsername" finished-at="2023-05-30T21:41:15 EDT" duration-ms="465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedTokenWithInvalidUsername -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.SecurityTest@1fb19a0]" started-at="2023-05-30T21:41:15 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:15 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="testGeneratedTokenWithValidUsername()[pri:0, instance:tek.api.sqa.tests.SecurityTest@1fb19a0]" started-at="2023-05-30T21:41:15 EDT" name="testGeneratedTokenWithValidUsername" finished-at="2023-05-30T21:41:16 EDT" duration-ms="545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGeneratedTokenWithValidUsername -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.SecurityTest@1fb19a0]" started-at="2023-05-30T21:41:15 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:15 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
      </class> <!-- tek.api.sqa.tests.SecurityTest -->
      <class name="tek.api.sqa.tests.GetAllAccountsTest">
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.GetAllAccountsTest@4816278d]" started-at="2023-05-30T21:41:07 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:07 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="getAllAccounts()[pri:0, instance:tek.api.sqa.tests.GetAllAccountsTest@4816278d]" started-at="2023-05-30T21:41:07 EDT" name="getAllAccounts" finished-at="2023-05-30T21:41:13 EDT" duration-ms="6440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllAccounts -->
      </class> <!-- tek.api.sqa.tests.GetAllAccountsTest -->
      <class name="tek.api.sqa.tests.GetAllPlanCodeTest">
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.GetAllPlanCodeTest@6676f6a0]" started-at="2023-05-30T21:41:13 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:13 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="getAllPlanCode()[pri:0, instance:tek.api.sqa.tests.GetAllPlanCodeTest@6676f6a0]" started-at="2023-05-30T21:41:13 EDT" name="getAllPlanCode" finished-at="2023-05-30T21:41:15 EDT" duration-ms="1291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllPlanCode -->
      </class> <!-- tek.api.sqa.tests.GetAllPlanCodeTest -->
      <class name="tek.api.sqa.tests.AddPrimaryAccountTest">
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.AddPrimaryAccountTest@2f01783a]" started-at="2023-05-30T21:41:01 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:02 EDT" duration-ms="417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="addPrimaryAccount()[pri:0, instance:tek.api.sqa.tests.AddPrimaryAccountTest@2f01783a]" started-at="2023-05-30T21:41:02 EDT" name="addPrimaryAccount" finished-at="2023-05-30T21:41:04 EDT" duration-ms="2815" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [201] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [201] but found [400]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at tek.api.sqa.tests.AddPrimaryAccountTest.addPrimaryAccount(AddPrimaryAccountTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPrimaryAccount -->
      </class> <!-- tek.api.sqa.tests.AddPrimaryAccountTest -->
      <class name="tek.api.sqa.tests.GetAccountTest">
        <test-method signature="getAccountWithAnID()[pri:0, instance:tek.api.sqa.tests.GetAccountTest@327af41b]" started-at="2023-05-30T21:41:06 EDT" name="getAccountWithAnID" finished-at="2023-05-30T21:41:07 EDT" duration-ms="1260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAccountWithAnID -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.GetAccountTest@327af41b]" started-at="2023-05-30T21:41:06 EDT" name="setupApiTest" finished-at="2023-05-30T21:41:06 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
      </class> <!-- tek.api.sqa.tests.GetAccountTest -->
    </test> <!-- Tek Insurance API Tests -->
  </suite> <!-- Regression test Suite -->
</testng-results>
